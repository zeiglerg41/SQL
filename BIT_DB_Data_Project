-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid IS NOT NULL 
AND orderid <> 'Order ID';
-- 9681 orders

-- How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales Jan
WHERE Jan.orderID IS NOT NULL
AND length(orderID) = 6
AND Jan.orderID <> ' '
AND Jan.Product LIKE 'iPhone';
-- 379 iphone orders

-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum 
FROM BIT_DB.customers cust 
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE length(Feb.orderID) = 6
AND Feb.orderID <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT product, MIN(price) FROM BIT_DB.JanSales
WHERE JanSales.orderID IS NOT NULL
AND JanSales.orderID <> ' '
GROUP BY product;
--OR
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales)
-- OR
SELECT product, min(price) 
FROM BIT_DB.JanSales Jan 
GROUP BY product, price 
ORDER BY price ASC
LIMIT 1;
-- AAA Batteries (4-pack) for $2.99

-- What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT SUM(quantity) * price AS revenue, product 
FROM BIT_DB.JanSales Jan
WHERE Jan.orderID IS NOT NULL
AND length(Jan.orderID) = 6
AND Jan.orderID <> ' '
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity*price) 
FROM BIT_DB.FebSales Feb
WHERE Feb.location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(Cust.order_id), AVG(Feb.Quantity * Feb.price) 
FROM BIT_DB.customers Cust
LEFT JOIN  BIT_DB.FebSales Feb
ON Cust.order_id = Feb.orderID
WHERE Feb.Quantity > 2
AND Feb.orderID IS NOT NULL
AND Feb.orderID <> ' ';
-- OR
SELECT COUNT(Cust.acctnum), AVG(Feb.Quantity * Feb.price) 
FROM BIT_DB.customers Cust
LEFT JOIN  BIT_DB.FebSales Feb
ON Cust.order_id = Feb.orderID
WHERE Feb.Quantity > 2
AND Feb.orderID IS NOT NULL
AND Feb.orderID <> ' ';

-- Find all the products ordered between '02/13/19 00:00' and '02/18/19 00:00'
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

-- Find the location related to the order placed on '02/18/19 01:35'
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

-- Find the total number of items ordered in February where the date is 02/18/19 regardless of the time
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

-- Find the number of unique products ordered in February that are related to Batteries
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

-- Find the product and its respective price from orders made in February where the price ends with ".99"
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, COUNT(Jan.orderID)
FROM BIT_DB.JanSales Jan
WHERE location LIKE '%NY%'
AND Jan.orderID <> 'Order ID'
AND length(Jan.orderID) = 6
GROUP BY location
HAVING COUNT(Jan.orderID) >= 3;

-- How many of each type of headphone were sold in February?
SELECT distinct product, SUM(quantity)
FROM BIT_DB.FebSales feb
WHERE product LIKE '%Headphones%'
AND feb.orderID IS NOT NULL
AND length(feb.orderID) = 6
GROUP BY product;
-- Apple Airpods: 1013, Bose: 844, Wired: 1282

-- What was the average amount spent per account in February? 
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';
-- OR
SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- What was the average quantity of products purchased per account in February?
select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';
--1

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT distinct product, SUM(quantity * price) AS product_revenue
FROM BIT_DB.JanSales jan
WHERE jan.orderID IS NOT NULL
AND length(jan.orderID) = 6
GROUP BY product
ORDER BY SUM(quantity * price) DESC
LIMIT 1;
-- Macbook pro Laptop: $399,500
